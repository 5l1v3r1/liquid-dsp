# base configuration
image: debian
stages: [build, test]
before_script:
  - apt-get -qq update && apt-get -qq install -y automake autoconf gcc gcovr make

# build from scratch
compile:
  stage: build
  script:
    - ./bootstrap.sh
    - ./configure
    - make -j4
  artifacts: # save output objects for test stages
    paths: [makefile, configure, config.h, libliquid*, src/*/src/*.o]

# run all test programs
check:
  stage: test
  script:
    - make -j4 check
  artifacts:
    paths: [autotest.json]

# compile and run benchmark program
bench:
  stage: test
  script:
    - make -j4 bench
  artifacts:
    paths: [benchmark.json]

# compile and run example in README.md
#examples:
#  stage: test
#  script:
#    - sed -n '22,42p' README.md | sed "s/<liquid\/liquid.h>/\"liquid.h\"/g" | sed "s/^    //g" > readme.example.c
#    - gcc -Wall -Werror -O2 -fPIC -I./include -c -o readme.example.o readme.example.c
#    - gcc -Wall -Werror -O2 -fPIC -I./include -lm -lc -lfftw3f libliquid.ar -o readme.example readme.example.o
#    - ./readme.example

# compile and run all example programs
examples:
  stage: test
  script:
    - make -j4 examples
    - ls examples/*_example | sed "s#examples#./examples#g" > run_examples.sh
    - /bin/sh run_examples.sh
  artifacts:
    paths: [run_examples.sh]

# build from scratch
coverage:
  stage: test
  script:
    - make distclean
    - ./bootstrap.sh
    - ./configure --enable-coverage
    - make -j4 coverage
  coverage: '/lines: \d+\.\d+%/'
  artifacts:
    paths: [coverage.out]

